use mf4_rs::blocks::common::DataType;

pub struct ConstSig {
    pub name: &'static str,
    pub bit_count: u32,
    pub data_type: DataType,
    pub float_val: f32,
    pub int_val: i64,
}

pub const SIG_LIST: &[ConstSig] = &[
    ConstSig { name: "ActRoadWheelAngleAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "ActRoadWheelAngleCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 112 },
    ConstSig { name: "ActRoadWHeelAngleState", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 2 },
    ConstSig { name: "ActRoadWheelAngleValue", bit_count: 16, data_type: DataType::FloatLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "ActualSteeringMixerRatio", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "ActualSteeringMixerRatioAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "ActualSteeringMixerRatioCS", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "EpasDriverWarningExt", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "EpasDriverWarningExtAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "EpasDriverWarningExtCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "EpasReqEngRunning", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "LatDrvLvl12SrvAvlExt", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 1 },
    ConstSig { name: "LatDrvLvl23SrvAvl", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "LatDrvLvl3SrvAvlExt", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "LatLsmLvl12SrvAvl", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 1 },
    ConstSig { name: "LatLsmLvl23SrvAvl", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "LatLsmLvl4SrvAvl", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "LatMcRoadWheelAngActive", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PASTerrainModeExtPscm", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PASTerrChngModeStatus_Pscm", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 2 },
    ConstSig { name: "PASTrConfig", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMActRpcTrq", bit_count: 16, data_type: DataType::FloatLE, float_val: -20.48, int_val: 0 },
    ConstSig { name: "PSCMInternalControl", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMIntRpcMaxTrq", bit_count: 16, data_type: DataType::FloatLE, float_val: -20.48, int_val: 0 },
    ConstSig { name: "PSCMIntRpcMinTrq", bit_count: 16, data_type: DataType::FloatLE, float_val: -20.48, int_val: 0 },
    ConstSig { name: "PSCMLimiterGpAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "PSCMLimiterGpCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 1 },
    ConstSig { name: "PSCMModuleInCtrlExt", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMMotionTypeServedExtAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "PSCMMotionTypeServedExtCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 7 },
    ConstSig { name: "PSCMMotTypeServedLat", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMMotTypeServedLvl", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMMotTypeServedMode", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMSftyLimMode", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMSftyLimStatus", bit_count: 3, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMState", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 2 },
    ConstSig { name: "PSCMSteeringWheelAngle", bit_count: 16, data_type: DataType::FloatLE, float_val: 0.2, int_val: 0 },
    ConstSig { name: "PSCMSteeringWheelAngleSpeed", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "PSCMSteeringWheelAngleStatus", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 3 },
    ConstSig { name: "PSCMSteeringWHeelGpAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "PSCMSteeringWheelGpCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 166 },
    ConstSig { name: "PSCMSteeringWheelRotDir", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 1 },
    ConstSig { name: "PSCMTemperature", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 40.0, int_val: 0 },
    ConstSig { name: "PSCMTemperatureState", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 1 },
    ConstSig { name: "SteeringRackForceAccur", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "SteeringRackForceEst", bit_count: 16, data_type: DataType::FloatLE, float_val: -25575.0, int_val: 0 },
    ConstSig { name: "SteeringRackForceValid", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "SteerMtnTypDADCVldy", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "TorsionBarTorque", bit_count: 16, data_type: DataType::FloatLE, float_val: 0.06, int_val: 0 },
    ConstSig { name: "TorsionBarTorqueCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 157 },
    ConstSig { name: "TorsionBarTorqueCtr", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "TorsionBarTorqueQF", bit_count: 2, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 3 },
    ConstSig { name: "TorsionBarTorqueSign", bit_count: 1, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "VMCPSCMLatDrvAvlExt1GpAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 8 },
    ConstSig { name: "VMCPSCMLatDrvAvlExt1GPCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 131 },
    ConstSig { name: "VMCRPCTorqueExtGPAC", bit_count: 4, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
    ConstSig { name: "VMCRPCTorqueExtGPCS", bit_count: 8, data_type: DataType::UnsignedIntegerLE, float_val: 0.0, int_val: 0 },
];

pub const RAW_MSG: [u8; 64] = [
    0x70, 0x08, 0x23, 0x28, 0x02, 0x07, 0x08, 0x00, 0x00, 0xA6, 0x08, 0x00,
    0x07, 0x1E, 0x7A, 0x9D, 0x08, 0x0C, 0x03, 0x83, 0x08, 0x50, 0x42, 0x04,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x08,
    0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
];

pub const RAW_MSG2: [u8; 64] = [
    0x70, 0x08, 0x23, 0x28, 0x02, 0x07, 0x08, 0x00, 0x00, 0x76, 0x08, 0x00,
    0x07, 0x7E, 0x7A, 0x7D, 0x08, 0x0C, 0x03, 0x73, 0x08, 0x50, 0x42, 0x04,
    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x08,
    0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00,
];
